from aiogram import types, F, Router
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardRemove

from handlers import keyboard, random_fox, bot_info, weatherapi

common_router = Router()

main_menu_names = [("–û –±–æ—Ç–µ", "info"), ("–ü–æ–∫–∞–∑–∞—Ç—å –ª–∏—Å—É", "fox"), ("–ü–æ–≥–æ–¥–∞", "weather")]

# –ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞
city_menu_names = [
    ("–ö—Å—Ç–æ–≤–æ", "weather_Kstovo"),
    ("–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥", "weather_Nizhniy Novgorod"),
    ("–ü–∏—Ç–µ—Ä", "weather_St. Petersburg"),
    ("–ú–æ—Å–∫–≤–∞", "weather_Moscow"),
]


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@common_router.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        f"<b>üòä –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!!!</b>",
        reply_markup=keyboard.make_inline_keyboard(main_menu_names),
    )


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /info
@common_router.callback_query(lambda c: c.data == "info")
async def info_callback(query: types.CallbackQuery):
    await query.message.answer("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:")
    Bot_info = bot_info.get_bot_info(config.token_api)
    message_text = (
        "<b>–ò–º—è –±–æ—Ç–∞:</b>   <i>{}</i>\n"
        "<b>ID –±–æ—Ç–∞:</b>        <i>{}</i>\n"
        "<b>–Ø–∑—ã–∫ –±–æ—Ç–∞:</b>  <i>{}</i>".format(
            Bot_info["username"],
            Bot_info["id"],
            Bot_info.get("language_code", "–Ω–µ —É–∫–∞–∑–∞–Ω"),
        )
    )

    await query.message.answer(
        message_text, reply_markup=keyboard.make_inline_keyboard(main_menu_names)
    )
    await query.answer()


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /fox
@common_router.callback_query(lambda c: c.data == "fox")
async def info_fox(query: types.CallbackQuery):
    await query.message.answer("–î–µ—Ä–∂–∏ –ª–∏—Å—É üòä")
    img_fox = random_fox.fox()
    await query.message.answer_photo(img_fox)
    await query.answer()


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /weather
@common_router.callback_query(lambda c: c.data == "weather")
async def weather_query(query: types.CallbackQuery):
    await query.message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞:",
        reply_markup=keyboard.make_inline_keyboard(city_menu_names),
    )
    await query.answer()


@common_router.callback_query(lambda c: c.data.startswith("weather_"))
async def city_weather(query: types.CallbackQuery):
    # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–∑ callback_data
    _, city = query.data.split("_")
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–≥–æ–¥—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞
    print(city)
    weather_data = await weatherapi.get_weather(city)
    await query.message.answer(weather_data)
    await query.answer()


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
@common_router.message(F.text)
async def msg_echo(message: types.Message):
    print(message.from_user)
    name = message.from_user.first_name
    if "–ø—Ä–∏–≤–µ—Ç" in message.text.lower():
        await message.answer(
            f"<b>üòä –ü—Ä–∏–≤–µ—Ç, {name}!!!</b>",
            reply_markup=keyboard.make_row_keyboard(main_menu_names),
        )
    elif "–ø–æ–∫–∞" in message.text.lower():
        await message.answer(f"–ü–æ–∫–∞, {name}!!!", reply_markup=ReplyKeyboardRemove())
