from datetime import datetime
from dotenv import load_dotenv
import requests
import os

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
weather_api = os.getenv("weather_api")
if not weather_api:
    raise ValueError("No weather_api provided")


def format_date(date_str):
    month_names = {
        "01": "—è–Ω–≤–∞—Ä—è",
        "02": "—Ñ–µ–≤—Ä–∞–ª—è",
        "03": "–º–∞—Ä—Ç–∞",
        "04": "–∞–ø—Ä–µ–ª—è",
        "05": "–º–∞—è",
        "06": "–∏—é–Ω—è",
        "07": "–∏—é–ª—è",
        "08": "–∞–≤–≥—É—Å—Ç–∞",
        "09": "—Å–µ–Ω—Ç—è–±—Ä—è",
        "10": "–æ–∫—Ç—è–±—Ä—è",
        "11": "–Ω–æ—è–±—Ä—è",
        "12": "–¥–µ–∫–∞–±—Ä—è",
    }
    date_obj = datetime.strptime(date_str, "%Y-%m-%d")
    return date_obj.strftime(f"%d {month_names[date_obj.strftime('%m')]} %Y –≥.")


def get_emoji(condition):
    if "snow" in condition.lower():
        return "‚ùÑÔ∏è"
    elif "cloudy" in condition.lower():
        return "‚òÅÔ∏è"
    elif "rain" in condition.lower():
        return "üåßÔ∏è"
    elif "fog" in condition.lower():
        return "üå´Ô∏è"
    elif "sunny" in condition.lower():
        return "üåû"
    elif "blizzard" in condition.lower():
        return "üí®"
    elif "overcast" in condition.lower():
        return "‚õÖ"
    elif "lightning" in condition.lower():
        return "üå©Ô∏è"
    # –¥–æ–±–∞–≤—å—Ç–µ –¥—Ä—É–≥–∏–µ —É—Å–ª–æ–≤–∏—è –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —ç–º–æ–¥–∑–∏ –ø–æ –∂–µ–ª–∞–Ω–∏—é
    else:
        return ""


async def get_weather(city):
    api_key = weather_api
    url = f"http://api.weatherapi.com/v1/forecast.json?key={api_key}&q={city}&days=10"

    try:
        response = requests.get(url)
        response.raise_for_status()
        weather_data = response.json()

        now = f"<b>–°–µ–π—á–∞—Å –≤ {city}</b> {weather_data['current']['condition']['text']} <b>{weather_data['current']['temp_c']}¬∞C</b>\n"
        forecast_message = f"{now}<b>–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ 10 –¥–Ω–µ–π:</b>\n\n"

        for day in weather_data["forecast"]["forecastday"]:
            date = format_date(day["date"])
            condition = day["day"]["condition"]["text"]
            max_temp = day["day"]["maxtemp_c"]
            min_temp = day["day"]["mintemp_c"]
            wind_speed = day["day"]["maxwind_kph"]

            emoji = get_emoji(condition)

            forecast_message += f"<b>{date}:</b>\n{emoji} <i>{condition}</i>, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –æ—Ç <i>{min_temp}¬∞C</i> –¥–æ <i>{max_temp}¬∞C</i>, –≤–µ—Ç–µ—Ä –¥–æ <i>{wind_speed} –∫–º/—á</i>\n"

        return forecast_message

    except requests.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ API: {e}")
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ."
